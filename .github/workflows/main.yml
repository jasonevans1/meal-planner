name: Main

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: PHP ${{ matrix.php }}
    runs-on: ubuntu-latest
    # Service container Mysql mysql
    services:
      # Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mariadb:10.4
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE:  testing
        ## map the "external" 33306 port with the "internal" 3306
        ports:
          - 33306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      fail-fast: true
      matrix:
        php: [8.2]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite
          coverage: none

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Copy environment file
        run: cp .env.example .env

      - name: Generate app key
        run: php artisan key:generate

      - name: Run Pint
        run: vendor/bin/pint --test

      - name: Run Pest
        # Set environment
        env:
          DB_CONNECTION: mysql
          DB_DATABASE: testing
          DB_PORT: 33306
          DB_USER: root
          DB_PASSWORD: secret
        run: |
          vendor/bin/pest
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build standalone Laravel binary
        run: docker build -t static-laravel-app -f static-build.Dockerfile .

      - name: Extract the binary
        run: docker cp $(docker create --name static-laravel-app-tmp static-laravel-app):/go/src/app/dist/frankenphp-linux-x86_64 frankenphp-static-app ; docker rm static-laravel-app-tmp

      - name: Archive the binary
        uses: actions/upload-artifact@v4
        with:
          name: frankenphp-static-app
          path: frankenphp-static-app
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download the binary
        uses: actions/download-artifact@v4
        with:
          name: frankenphp-static-app
          path: frankenphp-static-app

      - name: Deploy to DigitalOcean
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ vars.DO_SERVER_IP }}
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          timeout: 240s
          source: frankenphp-static-app
          target: /root/packages/

      - name: Restart the service
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ vars.DO_SERVER_IP }}
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            cd /root/packages
            ls -la
            mv frankenphp frankenphp-$(date +"%FT%H%M%S")
            mv frankenphp-static-app/frankenphp-static-app frankenphp
            chmod 755 frankenphp
            cd /root
            ls -la
            ./frankenphp php-cli artisan migrate --force
            ./frankenphp php-cli artisan key:generate
            ./frankenphp php-cli artisan config:cache
            killall -9 frankenphp
            nohup /root/frankenphp php-server --domain jasonevans.xyz --access-log > frankenphp-server.log 2>&1 &
